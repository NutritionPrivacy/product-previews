name: Product Preview Export

on:
  schedule:
    - cron: '0 2 * * *' # run at 2 AM UTC
  workflow_dispatch:

jobs:
  export:
    runs-on: ubuntu-22.04

    steps:
    - name: Maximize build space
      uses: easimon/maximize-build-space@master
      with:
        root-reserve-mb: 512
        swap-size-mb: 1024
        remove-dotnet: 'true'
        remove-android: 'true'
        remove-haskell: 'true'
        
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        submodules: true
    - name: Start Local Server
      run: |
        mkdir ./ci/database_dump/
        docker-compose -f ci/docker-compose.ci.yml up -d
        ./ci/healthcheck.sh

    - name: Download PostgreSQL Dump
      run: |
        wget --header="cache-bypass-auth: ${{ secrets.CACHE_BYPASS_AUTH }}" db.nutritionprivacy.de/database.sql -O ./ci/database_dump/database.sql

    - name: Import PostgreSQL Dump
      run: |
        docker stop nutritionprivacy
        docker exec -e PGPASSWORD=vapor_password nutritionprivacy_db psql -U vapor_username -d postgres -c "DROP DATABASE IF EXISTS vapor_database;"
        docker exec -e PGPASSWORD=vapor_password nutritionprivacy_db psql -U vapor_username -d postgres -c "CREATE DATABASE vapor_database;"
        docker exec -i -e PGPASSWORD=vapor_password nutritionprivacy_db psql -h localhost -U vapor_username -d vapor_database -f ./database_dump/database.sql
        docker-compose -f ci/docker-compose.ci.yml up -d
        ./ci/healthcheck.sh

    - name: Download Nutrition Privacy JSON
      run: |
        wget 0.0.0.0:8080/export/previews/de_CH -O nutritionprivacy_de.json

    - name: Output JSON file content
      run: cat nutritionprivacy_de.json


    - name: Convert Nutrition Privacy JSON to JSONL
      run: |
        jq -c '.[]' nutritionprivacy_de.json > nutritionprivacy-products.jsonl
    
    - name: Download OpenFoodFacts JSONL
      run: | 
        curl -o - https://static.openfoodfacts.org/data/openfoodfacts-products.jsonl.gz -f | gunzip > ./openfoodfacts-products.jsonl
    
    - name: Create Product Preview JSON files
      run: |
        mkdir public
        swift run ProductPreviews
    
    - name: Update nightly release
      run: gh release upload nightly public/* --clobber
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

